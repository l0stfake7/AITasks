/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package aitask1.Forms;

import aitask1.Classes.*;
import java.awt.Dialog;
import java.awt.Window;
import java.util.ArrayList;
import javax.swing.DefaultListModel;
import javax.swing.JDialog;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;

/**
 *
 * @author Bartek
 */
public class JPanelMain extends javax.swing.JPanel {

    
    private final DefaultListModel<String> listModeljListGeneratePermutations;
    private final DefaultListModel<String> listModeljListGeneratePermutationsHetman;    
    private ArrayList<String> firstResult;
    private ArrayList<String> secondResult; 
    private JPanelDrawChessboard jPanelDrawChessboard;
    private boolean refreshFlag;
    
    /**
     * Creates new form JPanelMain
     */
    public JPanelMain() {
        
        listModeljListGeneratePermutations = new DefaultListModel<>();
        listModeljListGeneratePermutationsHetman = new DefaultListModel<>();
        firstResult = new ArrayList<>();
        secondResult = new ArrayList<>();
        refreshFlag = false;
        initComponents(); 
    }   


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroupGenerateMethod = new javax.swing.ButtonGroup();
        jButtonGenerate = new javax.swing.JButton();
        jLabelNumbers = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jListGeneratePermutations = new javax.swing.JList<>();
        jComboBoxNumbers = new javax.swing.JComboBox<>();
        jRadioButtonMethodRecursion = new javax.swing.JRadioButton();
        jRadioButtonMethodLexicographically = new javax.swing.JRadioButton();
        jLabelGenerateMethod = new javax.swing.JLabel();
        jCheckBoxValidResults = new javax.swing.JCheckBox();
        jScrollPane2 = new javax.swing.JScrollPane();
        jListGeneratePermutationsHetman = new javax.swing.JList<>();

        jButtonGenerate.setText("Generate!");
        jButtonGenerate.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonGenerateMouseClicked(evt);
            }
        });

        jLabelNumbers.setText("Type n:");

        jListGeneratePermutations.setModel(listModeljListGeneratePermutations);
        jScrollPane1.setViewportView(jListGeneratePermutations);

        jComboBoxNumbers.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9" }));

        buttonGroupGenerateMethod.add(jRadioButtonMethodRecursion);
        jRadioButtonMethodRecursion.setSelected(true);
        jRadioButtonMethodRecursion.setText("recursion");

        buttonGroupGenerateMethod.add(jRadioButtonMethodLexicographically);
        jRadioButtonMethodLexicographically.setText("lexicographically");

        jLabelGenerateMethod.setText("Generate method:");

        jCheckBoxValidResults.setText("8 hetmans problem solve");

        jListGeneratePermutationsHetman.setModel(listModeljListGeneratePermutationsHetman);
        jListGeneratePermutationsHetman.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);
        jListGeneratePermutationsHetman.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                jListGeneratePermutationsHetmanValueChanged(evt);
            }
        });
        jScrollPane2.setViewportView(jListGeneratePermutationsHetman);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelGenerateMethod)
                            .addComponent(jLabelNumbers))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jRadioButtonMethodRecursion)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jRadioButtonMethodLexicographically))
                            .addComponent(jComboBoxNumbers, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jCheckBoxValidResults, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButtonGenerate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelNumbers)
                    .addComponent(jComboBoxNumbers, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCheckBoxValidResults))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabelGenerateMethod)
                        .addComponent(jRadioButtonMethodRecursion))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jRadioButtonMethodLexicographically)
                        .addComponent(jButtonGenerate)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 217, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 218, Short.MAX_VALUE)))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonGenerateMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonGenerateMouseClicked
        
        try {  
            refreshFlag = true;
            StringBuilder stringBuilder;
            long counter = 0;
            //clear listBox
            listModeljListGeneratePermutations.removeAllElements();
            listModeljListGeneratePermutationsHetman.removeAllElements();
            
            
            if(jRadioButtonMethodRecursion.isSelected()) {//recursive
               //build n size string from 0 to n
                String source = "";
                int i = 1;
                while(i <= Integer.parseInt(jComboBoxNumbers.getSelectedItem().toString())) {
                    source += i;
                    i++;
                }      
                //calculate
                firstResult = PermutationGenerator.GeneratePermutationRecursive(source);     
            }
            else {//lexicographically
                //calculate
                firstResult = PermutationGenerator.GeneratePermutationLexicographically(Integer.parseInt(jComboBoxNumbers.getSelectedItem().toString()));              
            } 
            
            //show results
            
            for(String permutation: firstResult) {
                counter++;
                stringBuilder = new StringBuilder("");
                stringBuilder.append(counter);
                stringBuilder.append(" = {");
                for (int i = 0; i < permutation.length(); i++){
                    stringBuilder.append(permutation.charAt(i));
                    if(i < permutation.length() -1)
                        stringBuilder.append(",");
                }
                stringBuilder.append("}");
                listModeljListGeneratePermutations.addElement(stringBuilder.toString());
                
            }    
            counter = 0;
            
            if(jCheckBoxValidResults.isSelected()) {//8 hetmans problem solve
                
                secondResult = HetmansProblemSolver.validPermutations(firstResult);
                //show results
                for(String permutation: secondResult) {
                    counter++;
                    stringBuilder = new StringBuilder("");
                    stringBuilder.append(counter);
                    stringBuilder.append(" = {");
                    for (int i = 0; i < permutation.length(); i++){
                        stringBuilder.append(permutation.charAt(i));
                        if(i < permutation.length() -1)
                            stringBuilder.append(",");
                    }
                    stringBuilder.append("}");
                    listModeljListGeneratePermutationsHetman.addElement(stringBuilder.toString());
                
                }   
            }
            refreshFlag = false;
        }
        catch(NumberFormatException exc) {
            JOptionPane.showMessageDialog(null, "whaaaat?" + exc.toString());
        }
        catch(Exception exc) {
            JOptionPane.showMessageDialog(null, "whaaaaaaaat?" + exc.toString());
        } 
    }//GEN-LAST:event_jButtonGenerateMouseClicked

    private void jListGeneratePermutationsHetmanValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_jListGeneratePermutationsHetmanValueChanged
        
        if(!refreshFlag) {
            jPanelDrawChessboard = new JPanelDrawChessboard(secondResult.get(jListGeneratePermutationsHetman.getSelectedIndex()), Byte.parseByte(jComboBoxNumbers.getSelectedItem().toString()));
            JDialog dialog = null;
            //show 
            if (dialog == null) {
                Window win = SwingUtilities.getWindowAncestor(this);
                if (win != null) {
                    dialog = new JDialog(win, secondResult.get(jListGeneratePermutationsHetman.getSelectedIndex()), Dialog.ModalityType.APPLICATION_MODAL);
                    dialog.getContentPane().add(jPanelDrawChessboard);
                    dialog.setResizable(false);
                    dialog.pack();
                    dialog.setLocationRelativeTo(null);
                }
            }

            dialog.setVisible(true); // here the modal dialog takes over
            dialog = null;
        }
    }//GEN-LAST:event_jListGeneratePermutationsHetmanValueChanged
/*
            drawPanel = new DrawPanel();
        drawPanel.setSize(600, 600);
        drawPanel.setVisible(true);
    */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroupGenerateMethod;
    private javax.swing.JButton jButtonGenerate;
    private javax.swing.JCheckBox jCheckBoxValidResults;
    private javax.swing.JComboBox<String> jComboBoxNumbers;
    private javax.swing.JLabel jLabelGenerateMethod;
    private javax.swing.JLabel jLabelNumbers;
    private javax.swing.JList<String> jListGeneratePermutations;
    private javax.swing.JList<String> jListGeneratePermutationsHetman;
    private javax.swing.JRadioButton jRadioButtonMethodLexicographically;
    private javax.swing.JRadioButton jRadioButtonMethodRecursion;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
}
